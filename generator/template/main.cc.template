

#include <google/protobuf/service.h>
#include <memory>
#include <RPC/common/log.h>
#include <RPC/common/config.h>
#include <RPC/net/tcp/net_addr.h>
#include <RPC/net/tcp/tcp_server.h>
#include <RPC/net/rpc/rpc_dispatcher.h>
${INCLUDE_SERVER_HEADER}

int main(int argc, char* argv[]) {

  if (argc != 2) {
    printf("Start ${PROJECT_NAME} error, argc not 2 \n");
    printf("Start like this: \n");
    printf("./${PROJECT_NAME} ../conf/Tinyxml.xml \n");
    return 0;
  }

  RPC::Config::SetGlobalConfig(argv[1]);

  RPC::Logger::InitGlobalLogger();

  RPC::RpcDispatcher::GetRpcDispatcher()->registerService(std::make_shared<${CLASS_NAME}>());

  RPC::IPNetAddr::s_ptr addr = std::make_shared<RPC::IPNetAddr>("127.0.0.1", RPC::Config::GetGlobalConfig()->m_port);

  RPC::TcpServer tcp_server(addr);

  tcp_server.start();

  return 0;
}